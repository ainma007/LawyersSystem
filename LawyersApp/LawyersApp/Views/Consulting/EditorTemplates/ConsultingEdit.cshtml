@model LawyersApp.Models.Consulting.ConsultingViewModel
    <style type="text/css">
        div.k-edit-form-container {
            width: 100%;
        }

            div.k-edit-form-container div.editor-field textarea, input.k-textbox {
                width: 100%;
                max-width: none;
            }
    </style>
    <div class="k-edit-form-container" style="margin:auto;">





    <div class="col-md-6">
        <div class="form-group">
            <label class="control-label">@Html.LabelFor(model => model.ConsultingDate)</label>
            <div>
                @Html.Kendo().DatePickerFor(model => model.ConsultingDate)@Html.ValidationMessageFor(model => model.ConsultingDate)
            </div>
        </div>
    </div>



    <div class="col-md-6">
        <div class="form-group">
            <label class="control-label">@Html.LabelFor(model => model.ConsultantName)</label>
            <div class="append-icon">
                @Html.EditorFor(model => model.ConsultantName)@Html.ValidationMessageFor(model => model.ConsultantName)
                <i class="icon-user"></i>
            </div>
        </div>
    </div>

    <div class="col-md-6">
        <div class="form-group">
            <label class="control-label">@Html.LabelFor(model => model.Gender)</label>
            <div>

                @(Html.Kendo().DropDownListFor(model => model.Gender)
          .Name("Gender")
          .BindTo(new List<string>() {
              "ذكر",
             "أنثى",


          })
                )
                @Html.ValidationMessageFor(model => model.Gender)
            </div>
        </div>
    </div>

    <div class="col-md-6">
        <div class="form-group">
            <label class="control-label">@Html.LabelFor(model => model.Age)</label>
            <div class="append-icon">
                @Html.Kendo().NumericTextBoxFor(model => model.Age)@Html.ValidationMessageFor(model => model.Age)
                
            </div>
        </div>
    </div>

    <div class="col-sm-12">
        <div class="form-group">
            <label class="control-label">@Html.LabelFor(model => model.CounselingRequired)</label>
            <div class="append-icon">
                @Html.Kendo().EditorFor(model => model.CounselingRequired)@Html.ValidationMessageFor(model => model.CounselingRequired)
                <i class="fa fa-map-marker"></i>
            </div>
        </div>
    </div>


    <div class="col-sm-12">
        <div class="form-group">
            <label class="control-label">@Html.LabelFor(model => model.CounselingRendered)</label>
            <div class="append-icon">
                @Html.Kendo().EditorFor(model => model.CounselingRendered)@Html.ValidationMessageFor(model => model.CounselingRendered)
                <i class="fa fa-map-marker"></i>
            </div>
        </div>
    </div>







        <div class="col-sm-6">
            <div class="form-group">
                <label class="control-label">@Html.LabelFor(model => model.LawyerID)</label>
                <div>
                    @(Html.Kendo().DropDownListFor(model => model.LawyerID)
    .HtmlAttributes(new { style = "width: 100%;" })
    .DataTextField("LawyerName")
    .DataValueField("LawyerID")
    .Filter("contains")
    .DataSource(source =>
    {
        source.Read(read =>
        {

            read.Action("GetLawyer", "Consulting");
        })
       .ServerFiltering(false);
    })


                    )
                    @Html.ValidationMessageFor(model => model.LawyerID)
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="form-group">

                @Html.LabelFor(model => model.IssuesTypeID)

                @(Html.Kendo().DropDownListFor(model => model.IssuesTypeID)
    .HtmlAttributes(new { style = "width: 100%;" })
     .DataTextField("IssuesTypename")
          .DataValueField("IssuesTypeID")
    .Filter("contains")
    .DataSource(source =>
    {
        source.Read(read =>
        {

            read.Action("GetIssuesType", "Consulting");
        })
        .ServerFiltering(false);
    })
                )

                @Html.ValidationMessageFor(model => model.IssuesTypeID)
            </div>

        </div>
    <div class="col-sm-6">
        <div class="form-group">
            <label class="control-label">@Html.LabelFor(model => model.TypeOfCaseID)</label>
            <div>
                @(Html.Kendo().DropDownListFor(model => model.TypeOfCaseID)
    .HtmlAttributes(new { style = "width: 100%;" })
    .DataTextField("TypeOfCase")
    .DataValueField("TypeOfCaseID")
    .Filter("contains")

    .DataSource(source =>
    {
        source.Read(read =>
        {
            read.Action("GetTypeOfCase", "Consulting").Data("filtermunicipality");
        })

        .ServerFiltering(true);

    })
                    .CascadeFrom("IssuesTypeID")

                )
                @Html.ValidationMessageFor(model => model.TypeOfCaseID)
            </div>
        </div>
    </div>

    <div class="col-md-6">
        <div class="form-group">
            <label class="control-label">@Html.LabelFor(model => model.CounselingStatus)</label>
            <div>

                @(Html.Kendo().DropDownListFor(model => model.CounselingStatus)
          .Name("CounselingStatus")
          .BindTo(new List<string>() {
              "أغلقلت",
             "انتهت",
              "حولت",

          })
                )
                @Html.ValidationMessageFor(model => model.CounselingStatus)
            </div>
        </div>
    </div>



   


    </div>

