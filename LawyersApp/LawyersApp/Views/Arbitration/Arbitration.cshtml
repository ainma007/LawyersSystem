@using LawyersApp.Models.Arbitration
@using System.Net;
@{
    ViewBag.Title = " التحكيم";
}

<script>
    kendo.culture("en-GB");
</script>
@if (Session["UserId"] == null)
{
 Response.Redirect("~/Account/Login");
    return;
}

@if ((string)Session["UserType"]=="1")
{


    <div class="col-lg-12 portlets">
        <div class="panel">
            <div class="panel-header ">
                <h2><i class="fa fa-list-alt"></i> <strong>إدارة</strong> التحكيم</h2>
                @(Html.Kendo().Grid<ArbitrationViewModel>()
    .Name("grid")
    .Columns(columns =>
    {
        columns.Bound(p => p.ArbitrationID).Width(50).Hidden();
        columns.Bound(p => p.ArbitrationNumber).Width(150).Title("رقم المركز").Locked(true);
        columns.Bound(p => p.ArbitrationDate).Width(170).HeaderHtmlAttributes(new { @title = "تاريخ الورود  " }).Format("{0:dd/MM/yyyy}").Title("تاريخ الورود ").Locked(true);
        columns.Bound(p => p.FirstSideName).Width(200).Title("اسم الطرف الأول").Locked(true);
        columns.Bound(p => p.FirstSideIDNumber).Width(150).Title("رقم هوية الطرف الأول");
        columns.Bound(p => p.FirstSidePhone).Width(150).Title("رقم هاتف الطرف الأول");
        columns.Bound(p => p.FirstSocialstatus).Width(200).Title("الحالة الاجتماعية للطرف الأول ");
        columns.Bound(p => p.FirstSideAddress).Width(200).Title("عنوان  للطرف الأول ");

        columns.Bound(p => p.SecondSideName).Width(200).Title("اسم الطرف الثاني").Locked(true);
        columns.Bound(p => p.SecondSideIDNumber).Width(150).Title("رقم هوية الطرف الثاني");
        columns.Bound(p => p.SecondSidePhone).Width(150).Title("رقم هاتف الطرف الثاني");
        columns.Bound(p => p.SecondSocialstatus).Width(200).Title("الحالة الاجتماعية للطرف الثاني ");
        columns.Bound(p => p.SecondSideAddress).Width(200).Title("عنوان  للطرف الثاني ");
        columns.Bound(p => p.ArbitrationName).Width(200).Title("اسم الوسيط ");
        columns.Bound(p => p.ArbitrationPhone).Width(200).Title("رقم هاتف الوسيط ");
        columns.Bound(p => p.ArbitrationDecision).Width(300).Title("القرار  ").Encoded(false);

        columns.ForeignKey(p => p.UserID, (System.Collections.IEnumerable)ViewData["users"], "UserID", "FullName")
   .Title("مدخل البيانات").Width(200);
        columns.Command(command =>
        {
            command.Edit().UpdateText("حفظ").CancelText("الفاء").Text("تعديل");
            command.Destroy().Text("حذف");
        }).Width(200);
    })
    .ToolBar(toolBar =>
    {
        toolBar.Create().Text("اضافة تحكيم");
    })
    .Editable(editable => editable.Mode(GridEditMode.PopUp).Window(w => w.Title(" بيانات التحكيم").Width(500).Height(500).Scrollable(true)).TemplateName("ArbitrationEdit"))
           .Pageable()
           .Selectable(selectable => selectable
            .Mode(GridSelectionMode.Multiple))
    .Sortable()
    .Scrollable()
    .Filterable()
    .HtmlAttributes(new { style = "height:550px;" })
    .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(100)
        .ServerOperation(false)
        .Model(model =>
        {
            model.Id(p => p.ArbitrationID);
            model.Field(p => p.ArbitrationID).Editable(false);
            model.Field(p => p.UserID).DefaultValue(int.Parse(Session["UserID"]
.ToString()));
            string currentUrlPage = HttpContext.Current.Request.Url.PathAndQuery;

            string[] words = currentUrlPage.Split('=');
            string s = "";
            foreach (string word in words)
            {
                s = word.ToString();
            }
            int x = int.Parse(s);
            model.Field(p => p.ProjectID).DefaultValue(x);

        })

        .Read(read => read.Action("db_Read", "Arbitration"))
        .Update(update => update.Action("db_Update", "Arbitration"))
        .Create(create => create.Action("db_Create", "Arbitration"))
        .Destroy(destroy => destroy.Action("db_Destroy", "Arbitration"))
    )

                )
            </div>
        </div>
    </div>

}

else if ((string)Session["UserType"]=="2")
{

    <div class="col-lg-12 portlets">
        <div class="panel">
            <div class="panel-header ">
                <h2><i class="fa fa-list-alt"></i> <strong>إدارة</strong> التحكيم</h2>
                @(Html.Kendo().Grid<ArbitrationViewModel>()
    .Name("grid")
    .Columns(columns =>
    {
        columns.Bound(p => p.ArbitrationID).Width(50).Hidden();
        columns.Bound(p => p.ArbitrationNumber).Width(150).Title("رقم المركز").Locked(true);
        columns.Bound(p => p.ArbitrationDate).Width(170).HeaderHtmlAttributes(new { @title = "تاريخ الورود  " }).Format("{0:dd/MM/yyyy}").Title("تاريخ الورود ").Locked(true);
        columns.Bound(p => p.FirstSideName).Width(200).Title("اسم الطرف الأول").Locked(true);
        columns.Bound(p => p.FirstSideIDNumber).Width(150).Title("رقم هوية الطرف الأول");
        columns.Bound(p => p.FirstSidePhone).Width(150).Title("رقم هاتف الطرف الأول");
        columns.Bound(p => p.FirstSocialstatus).Width(200).Title("الحالة الاجتماعية للطرف الأول ");
        columns.Bound(p => p.FirstSideAddress).Width(200).Title("عنوان  للطرف الأول ");

        columns.Bound(p => p.SecondSideName).Width(200).Title("اسم الطرف الثاني").Locked(true);
        columns.Bound(p => p.SecondSideIDNumber).Width(150).Title("رقم هوية الطرف الثاني");
        columns.Bound(p => p.SecondSidePhone).Width(150).Title("رقم هاتف الطرف الثاني");
        columns.Bound(p => p.SecondSocialstatus).Width(200).Title("الحالة الاجتماعية للطرف الثاني ");
        columns.Bound(p => p.SecondSideAddress).Width(200).Title("عنوان  للطرف الثاني ");
        columns.Bound(p => p.ArbitrationName).Width(200).Title("اسم المحكم ");
        columns.Bound(p => p.ArbitrationPhone).Width(200).Title("رقم هاتف المحكم ");
        columns.Bound(p => p.ArbitrationDecision).Width(300).Title("قرار التحكيم ").Encoded(false);

        columns.ForeignKey(p => p.UserID, (System.Collections.IEnumerable)ViewData["users"], "UserID", "FullName")
   .Title("مدخل البيانات").Width(200);
        columns.Command(command =>
        {
            command.Edit().UpdateText("حفظ").CancelText("الفاء").Text("تعديل");
            command.Destroy().Text("حذف");
        }).Width(200);
    })
    .ToolBar(toolBar =>
    {
        toolBar.Create().Text("اضافة تحكيم");
    })
    .Editable(editable => editable.Mode(GridEditMode.PopUp).Window(w => w.Title(" بيانات التحكيم").Width(500).Height(500).Scrollable(true)).TemplateName("ArbitrationEdit"))
           .Pageable()
           .Selectable(selectable => selectable
            .Mode(GridSelectionMode.Multiple))
    .Sortable()
    .Scrollable()
    .Filterable()
    .HtmlAttributes(new { style = "height:550px;" })
    .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(100)
        .ServerOperation(false)
        .Model(model =>
        {
            model.Id(p => p.ArbitrationID);
            model.Field(p => p.ArbitrationID).Editable(false);
            model.Field(p => p.UserID).DefaultValue(int.Parse(Session["UserID"]
.ToString()));

            string currentUrlPage = HttpContext.Current.Request.Url.PathAndQuery;

            string[] words = currentUrlPage.Split('=');
            string s = "";
            foreach (string word in words)
            {
                s = word.ToString();
            }
            int x = int.Parse(s);
            model.Field(p => p.ProjectID).DefaultValue(x);
        })

        .Read(read => read.Action("Userdb_Read", "Arbitration"))
        .Update(update => update.Action("db_Update", "Arbitration"))
        .Create(create => create.Action("db_Create", "Arbitration"))
        .Destroy(destroy => destroy.Action("db_Destroy", "Arbitration"))
    )

                )
            </div>
        </div>
    </div>
}